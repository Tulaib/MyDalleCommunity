import React from "react";
import { useNavigate } from "react-router-dom";
import { preview } from "../assets";
import { getRandomPromt } from "../utils";
import { FormFeild, Loader } from "../components";
const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = React.useState({
    name: "",
    prompt: "A mental robot with destroying power",
    photo: "",
  });
  const [generatingImg, setGeneratingImage] = React.useState(false);
  const [loading, setLoading] = React.useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (form.prompt && form.photo) {
      setLoading(true);
      try {
        const response = await fetch(
          "https://tulaibopenai.onrender.com/api/v1/post",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(form),
          }
        );
        await response.json();
        navigate("/");
      } catch (error) {
        alert("error from frontend", error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("please enter prompt and generate image to submit");
    }
  };

  const handleChange = (e) => {
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };
  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPromt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };
  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImage(true);
        const response = await fetch(
          "https://tulaibopenai.onrender.com/api/v1/dalle",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ prompt: form.prompt }),
          }
        );
        const data = await response.json();
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
      } catch (error) {
        alert("errro", error);
      } finally {
        setGeneratingImage(false);
      }
    } else {
      alert("Please enter a prompt");
    }
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Create</h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Create imaginative and visually stunning Images generated by DALL-E AI
        </p>
      </div>
      <form className="mt-16 max-w-3xl " onSubmit={handleSubmit} action="">
        <div className="flex flex-col gap-5">
          <FormFeild
            LabelName="Your name"
            type="text"
            name="name"
            value={form.name}
            placeholder="Jhon"
            handleChange={handleChange}
          />
          <FormFeild
            LabelName="Prompt"
            type="text"
            name="prompt"
            value={form.prompt}
            placeholder="A mental robot with destroying power"
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />
          <div
            className="relative bg-gray-50 border
          border-gray-300 text-gray-900 text-sm rounded-lg
          focus:ring-blue-500 focus:border-blue-500 w-64 p-3
          h-64 flex justify-center items-center"
          >
            {form.photo ? (
              <img
                src={form.photo}
                alt={form.photo}
                className="w-full h-full object-contain"
              />
            ) : (
              <img
                src={preview}
                alt={"preview"}
                className="w-9/12 h-9/12 object-contain opacity-40"
              />
            )}
            {generatingImg && (
              <div
                className="absolute inset-0 z-0 flex
              justify-center items-center bg-[rgba(0,0,0,0.5)]
              rounded-lg"
              >
                <Loader />
              </div>
            )}
          </div>
        </div>

        <div className="mt-5 flex gap-5">
          <button
            type="button"
            className="text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 pt-2 text-center"
            onClick={generateImage}
          >
            {generatingImg ? "Generating..." : "Generate"}
          </button>
        </div>
        <div className="mt-10">
          <p className="mt-2 text-[#666e75] text-[14px] ">
            Once you have created the image then you can share it with
            community.
          </p>
        </div>
        <button
          type="submit"
          className="mt-3 text-white bg-[#6469ff]
        font-medium rounded-md text-sm w-full sm:w-auto
        px-5 py-2 text-center"
        >
          {loading ? "sharing..." : "share"}
        </button>
      </form>
    </section>
  );
};

export default CreatePost;
